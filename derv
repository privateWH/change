Limitation research:

basic derivitives works well. for change in one variable.
However, cases such as

if (x<5 && x>0) change can't occur. doesn't work well in describing in calculus.
A stepwise modeling might needed.
 
 The use of this language is in the gap in which data might not exists; hence, gap in rate of change.
 
 
 Criteria of good development environment:
 1. Good data visualization, test data for prototyping.
 2. Add generator to language
 3. close to runtime envirionment.
 4. Quick turn around recover during testing.
 5. between op and dev changes.
 6. Start up time. 
 7. Accessibility, How quickly you can access to the dev environment.
 8. The language in which support to do something. i.e. modify text and released once. now, small changes that are hard to batch need to reapplied over dozens of file. 
      Grep pattern over all scopped env. (Grep for 1, then multiple back to critera 1).
      Batch change with maps of (1,2,3,4) with respect to the greped result.
      

--------------
Limit String in RegEx:
For example: <a>test <a> string</a> </a>
Interested in greping <a> string</a>
The method of interst string length chucking prior to regex. say 12-15 characters, then apply pattern <a>(.*?)</a>.
This might avoid <a>test <a> string</a>
One can argue there is easier way to search the interested group by <a> string</a>
